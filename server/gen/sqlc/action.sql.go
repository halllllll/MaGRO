// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: action.sql

package db

import (
	"context"
)

const createAction = `-- name: CreateAction :one
INSERT INTO action(name) VALUES($1) RETURNING id, name
`

func (q *Queries) CreateAction(ctx context.Context, name string) (Action, error) {
	row := q.db.QueryRow(ctx, createAction, name)
	var i Action
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const getAction = `-- name: GetAction :one
SELECT id, name FROM action
WHERE id = $1
`

func (q *Queries) GetAction(ctx context.Context, id int32) (Action, error) {
	row := q.db.QueryRow(ctx, getAction, id)
	var i Action
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const updateAction = `-- name: UpdateAction :one
UPDATE action
SET name = $1
WHERE id = $2
RETURNING id, name
`

type UpdateActionParams struct {
	Name string `db:"name" json:"name"`
	ID   int32  `db:"id" json:"id"`
}

func (q *Queries) UpdateAction(ctx context.Context, arg UpdateActionParams) (Action, error) {
	row := q.db.QueryRow(ctx, updateAction, arg.Name, arg.ID)
	var i Action
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
