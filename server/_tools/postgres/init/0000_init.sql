DROP TABLE IF EXISTS app, system, "users", logs, unit, action, subunit, status, users_unit, users_subunit, role CASCADE;

CREATE TABLE IF NOT EXISTS system (
  id INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
  version VARCHAR(255) NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS app(
  title VARCHAR(255) NOT NULL,
  client_id VARCHAR(255) NOT NULL,
  unit_alias VARCHAR(255) NOT NULL,
  subunit_alias VARCHAR(255) NOT NULL
);

COMMENT ON COLUMN app.unit_alias IS 'display group name. ex) 学校名';
COMMENT ON COLUMN app.subunit_alias IS 'display subgroup name. ex) 学部名';

CREATE TABLE IF NOT EXISTS role(
  id INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
  name VARCHAR(255) NOT NULL UNIQUE,
  name_alias VARCHAR(255)
);

COMMENT ON COLUMN role.name IS 'roles. ex) "teacher", "student"';

CREATE TABLE IF NOT EXISTS "status" (
  id INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
  name VARCHAR(255) NOT NULL UNIQUE
);


CREATE TABLE IF NOT EXISTS "users"(
  id VARCHAR(255) NOT NULL PRIMARY KEY,
  account_id VARCHAR(255) NOT NULL UNIQUE,
  name VARCHAR(255) NOT NULL,
  kana VARCHAR(255),
  role INTEGER NOT NULL,
  status INTEGER NOT NULL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (status)
    REFERENCES status(id),
  FOREIGN KEY (role)
    REFERENCES role(id)
);


COMMENT ON COLUMN users.id IS 'object-id (immutable)';
COMMENT ON COLUMN users.account_id IS 'user account id';


CREATE TABLE IF NOT EXISTS unit(
  id INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
  name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS "subunit"(
  id INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
  unit_id INTEGER NOT NULL,
  name VARCHAR(255) NOT NULL,
  public BOOLEAN NOT NULL DEFAULT true,
  created_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,  
  UNIQUE(unit_id, name),
  FOREIGN KEY(unit_id) REFERENCES unit(id)
);

CREATE TABLE IF NOT EXISTS users_subunit(
  id INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
  user_id VARCHAR(255) NOT NULL,
  subunit_id INTEGER NOT NULL,
  FOREIGN KEY(user_id)
    REFERENCES users(id),
  FOREIGN KEY(subunit_id)
    REFERENCES subunit(id),
  UNIQUE(user_id, subunit_id)
);

CREATE TABLE IF NOT EXISTS users_unit(
  id INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
  user_id VARCHAR(255) NOT NULL,
  unit_id INTEGER NOT NULL,
  FOREIGN KEY(user_id)
    REFERENCES users(id),
  FOREIGN KEY(unit_id)
    REFERENCES unit(id),
  UNIQUE(user_id, unit_id)
);

CREATE TABLE IF NOT EXISTS action(
  id INTEGER GENERATED ALWAYS AS IDENTITY  NOT NULL PRIMARY KEY,
  name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS log(
  id INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,
  timestamp TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
  user_id VARCHAR(255) NOT NULL,
  action_id INTEGER NOT NULL,
  FOREIGN KEY(user_id)
    REFERENCES users(id),
  FOREIGN KEY(action_id)
    REFERENCES action(id)
);